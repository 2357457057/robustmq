/*
 * Copyright (c) 2023 RobustMQ Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package mqtt;
service MqttBrokerService {
    rpc createUser(CreateUserRequest) returns(CommonReply){}
    rpc updateCache(UpdateCacheRequest) returns(CommonReply){}
    rpc SetClusterConfig(SetClusterConfigRequest) returns(CommonReply){}
}

message UpdateCacheRequest{
    string data = 1;
}

enum CreateUserSalt{
    Default = 0;
    Md5 = 1;
    Sh256 = 2;
}

enum Available{
    Disable = 0;
    Enable = 1;
}

message CreateUserRequest{
    string username = 1;
    string password = 2;
    bool isSuperUser = 3;
    CreateUserSalt salt = 4;
}

message CommonReply{
    bool flag = 1;
    string data = 2;
}

message SetClusterConfigRequest{
    uint32 sessionExpiryInterval = 1;
    uint32 topicAliasMax = 2;
    uint32 maxQos = 3;
    Available retainAvailable = 4;
    Available wildcardSubscriptionAvailable = 5;
    uint32 maxPacketSize = 6;
    Available subscriptionIdentifiersAvailable = 7;
    Available sharedSubscriptionAvailable = 8;
    uint32 serverKeepAlive = 9;
    uint32 receiveMax = 10;
    bool secretFreeLogin = 11;
}