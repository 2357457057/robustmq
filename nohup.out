warning: unused import: `Route`
  --> src/common/base/src/metrics/mod.rs:16:26
   |
16 | use axum::routing::{get, Route};
   |                          ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `broker_mqtt::BrokerMQTTConfig`, `read_file`
   --> src/common/base/src/config/broker_mqtt.rs:152:25
    |
152 |     use crate::config::{broker_mqtt::BrokerMQTTConfig, read_file};
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^

warning: unused imports: `broker_mqtt_conf`, `init_broker_mqtt_conf_by_path`
   --> src/common/base/src/config/broker_mqtt.rs:154:17
    |
154 |     use super::{broker_mqtt_conf, init_broker_mqtt_conf_by_path};
    |                 ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method `max_blocking_threads` is never used
  --> src/common/base/src/runtime.rs:65:12
   |
59 | impl RuntimeBuilder {
   | ------------------- method in this implementation
...
65 |     pub fn max_blocking_threads(&mut self, val: usize) -> &mut Self {
   |            ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: `common-base` (lib) generated 4 warnings (run `cargo fix --lib -p common-base` to apply 3 suggestions)
warning: unused import: `info`
  --> src/clients/src/placement/mod.rs:22:18
   |
22 |     log::{error, info},
   |                  ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unreachable pattern
   --> src/clients/src/broker_mqtt/mod.rs:106:17
    |
106 |                 _ => {
    |                 ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: `clients` (lib) generated 2 warnings (run `cargo fix --lib -p clients` to apply 1 suggestion)
warning: unused variable: `shard_name`
  --> src/storage-adapter/src/memory/mod.rs:55:36
   |
55 | ...ate_key_index(&self, shard_name: String, key: String, offset:...
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `key`
  --> src/storage-adapter/src/memory/mod.rs:55:56
   |
55 | ...f, shard_name: String, key: String, offset: usize) {}
   |                           ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `offset`
  --> src/storage-adapter/src/memory/mod.rs:55:69
   |
55 | ...String, key: String, offset: usize) {}
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_offset`

warning: unused variable: `shard_name`
  --> src/storage-adapter/src/memory/mod.rs:57:38
   |
57 | ...e_value_index(&self, shard_name: String, key: String) {}
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `key`
  --> src/storage-adapter/src/memory/mod.rs:57:58
   |
57 | ...f, shard_name: String, key: String) {}
   |                           ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `shard_name`
  --> src/storage-adapter/src/memory/mod.rs:59:42
   |
59 | ...mestamp_index(&self, shard_name: String, key: String, create_...
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `key`
  --> src/storage-adapter/src/memory/mod.rs:59:62
   |
59 | ...f, shard_name: String, key: String, create_time: u128) {}
   |                           ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `create_time`
  --> src/storage-adapter/src/memory/mod.rs:59:75
   |
59 | ...ring, key: String, create_time: u128) {}
   |                       ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_create_time`

warning: unused variable: `shard_name`
  --> src/storage-adapter/src/memory/mod.rs:61:42
   |
61 | ...mestamp_index(&self, shard_name: String, key: String) {}
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `key`
  --> src/storage-adapter/src/memory/mod.rs:61:62
   |
61 | ...f, shard_name: String, key: String) {}
   |                           ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `shard_name`
   --> src/storage-adapter/src/memory/mod.rs:180:9
    |
180 |         shard_name: String,
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `start_timestamp`
   --> src/storage-adapter/src/memory/mod.rs:181:9
    |
181 |         start_timestamp: u128,
    |         ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_start_timestamp`

warning: unused variable: `end_timestamp`
   --> src/storage-adapter/src/memory/mod.rs:182:9
    |
182 |         end_timestamp: u128,
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_end_timestamp`

warning: unused variable: `record_num`
   --> src/storage-adapter/src/memory/mod.rs:183:9
    |
183 |         record_num: Option<usize>,
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_record_num`

warning: unused variable: `record_size`
   --> src/storage-adapter/src/memory/mod.rs:184:9
    |
184 |         record_size: Option<usize>,
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_record_size`

warning: unused variable: `shard_name`
   --> src/storage-adapter/src/memory/mod.rs:191:9
    |
191 |         shard_name: String,
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `key`
   --> src/storage-adapter/src/memory/mod.rs:192:9
    |
192 |         key: String,
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `shard_config`
  --> src/storage-adapter/src/mysql/mod.rs:86:9
   |
86 |         shard_config: ShardConfig,
   |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_config`

warning: unused variable: `shard_name`
  --> src/storage-adapter/src/placement/mod.rs:46:9
   |
46 |         shard_name: String,
   |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `shard_config`
  --> src/storage-adapter/src/placement/mod.rs:47:9
   |
47 |         shard_config: ShardConfig,
   |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_config`

warning: unused variable: `shard_name`
  --> src/storage-adapter/src/placement/mod.rs:52:34
   |
52 | ... delete_shard(&self, shard_name: String) -> Result<(), Robust...
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: `storage-adapter` (lib) generated 21 warnings (run `cargo fix --lib -p storage-adapter` to apply 21 suggestions)
warning: unused import: `controller::placement::controller::ClusterController`
  --> src/placement-center/src/lib.rs:27:5
   |
27 | use controller::placement::controller::ClusterController;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `cluster::ClusterStorage`, `journal::shard::ShardStorage`, `node::NodeStorage`
  --> src/placement-center/src/controller/journal/controller.rs:20:9
   |
20 |         journal::shard::ShardStorage,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
21 |         placement::{cluster::ClusterStorage, node::NodeStorage},
   |                     ^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^

warning: unused import: `protocol::placement_center::generate::common::ClusterType`
  --> src/placement-center/src/controller/journal/controller.rs:26:5
   |
26 | use protocol::placement_center::generate::common::ClusterType;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `SystemTime`, `UNIX_EPOCH`
  --> src/placement-center/src/server/grpc/service_placement.rs:40:17
   |
40 | use std::time::{SystemTime, UNIX_EPOCH};
   |                 ^^^^^^^^^^  ^^^^^^^^^^

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/cluster.rs:19:32
   |
19 | ...c fn cluster_get(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/cluster.rs:23:32
   |
23 | ...c fn cluster_set(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/cluster.rs:27:33
   |
27 | ... fn cluster_list(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/user.rs:18:29
   |
18 | ...sync fn user_get(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/user.rs:22:32
   |
22 | ...c fn user_create(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/user.rs:26:32
   |
26 | ...c fn user_update(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/user.rs:30:32
   |
30 | ...c fn user_delete(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/user.rs:34:30
   |
34 | ...ync fn user_list(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `req`
   --> src/placement-center/src/server/grpc/service_journal.rs:128:13
    |
128 |         let req = request.into_inner();
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_req`

warning: variable does not need to be mutable
   --> src/placement-center/src/server/grpc/service_journal.rs:132:13
    |
132 |         let mut result = GetShardReply::default();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `req`
   --> src/placement-center/src/server/grpc/service_placement.rs:158:13
    |
158 |         let req = request.into_inner();
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_req`

warning: unused variable: `cf`
  --> src/placement-center/src/storage/journal/shard.rs:91:13
   |
91 |         let cf = self.rocksdb_engine_handler.cf_cluster();
   |             ^^ help: if this is intentional, prefix it with an underscore: `_cf`

warning: unused variable: `cluster_name`
  --> src/placement-center/src/storage/journal/shard.rs:90:33
   |
90 | ...t_all_shard(&self, cluster_name: &String) -> Vec<String> {
   |                       ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cluster_name`

warning: unused variable: `k`
  --> src/placement-center/src/storage/placement/cluster.rs:97:18
   |
97 |             for (k, v) in raw {
   |                  ^ help: if this is intentional, prefix it with an underscore: `_k`

warning: variable does not need to be mutable
  --> src/placement-center/src/storage/placement/node.rs:81:13
   |
81 |         let mut result = Vec::new();
   |             ----^^^^^^
   |             |
   |             help: remove this `mut`

warning: unused variable: `config`
  --> src/placement-center/src/storage/placement/raft.rs:50:13
   |
50 |         let config = placement_center_conf();
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `placement_center_storage`
   --> src/placement-center/src/lib.rs:189:9
    |
189 |         placement_center_storage: Arc<RaftMachineApply>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_placement_center_storage`

warning: methods `remove_topic` and `remove_user` are never used
  --> src/placement-center/src/cache/mqtt.rs:60:12
   |
36 | impl MqttCacheManager {
   | --------------------- methods in this implementation
...
60 |     pub fn remove_topic(&self, cluster_name: &String, topic_name...
   |            ^^^^^^^^^^^^
...
76 |     pub fn remove_user(&self, cluster_name: &String, username: &...
   |            ^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: fields `cluster_cache` and `engine_cache` are never read
  --> src/placement-center/src/controller/journal/segment_replica.rs:21:5
   |
20 | pub struct SegmentReplicaAlgorithm {
   |            ----------------------- fields in this struct
21 |     cluster_cache: Arc<PlacementCacheManager>,
   |     ^^^^^^^^^^^^^
22 |     engine_cache: Arc<JournalCacheManager>,
   |     ^^^^^^^^^^^^

warning: struct `PreferredElection` is never constructed
  --> src/placement-center/src/controller/journal/preferred_election.rs:19:12
   |
19 | pub struct PreferredElection {
   |            ^^^^^^^^^^^^^^^^^

warning: associated items `new` and `start` are never used
  --> src/placement-center/src/controller/journal/preferred_election.rs:24:12
   |
23 | impl PreferredElection {
   | ---------------------- associated items in this implementation
24 |     pub fn new(engine_cache: Arc<RwLock<JournalCacheManager>>) -...
   |            ^^^
...
28 |     pub async fn start(&self) {}
   |                  ^^^^^

warning: struct `StorageEngineController` is never constructed
  --> src/placement-center/src/controller/journal/controller.rs:30:12
   |
30 | pub struct StorageEngineController {
   |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `start`, `load_cache`, `resource_manager_thread`, and `preferred_replica_election` are never used
  --> src/placement-center/src/controller/journal/controller.rs:38:12
   |
37 | impl StorageEngineController {
   | ---------------------------- associated items in this implementation
38 |     pub fn new(
   |            ^^^
...
54 |     pub async fn start(&self) {
   |                  ^^^^^
...
60 |     pub fn load_cache(&self) {
   |            ^^^^^^^^^^
...
85 |     pub fn resource_manager_thread(&self) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^
...
89 |     pub fn preferred_replica_election(&self) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `BrokerHeartbeat` is never constructed
  --> src/placement-center/src/controller/placement/heartbeat.rs:27:12
   |
27 | pub struct BrokerHeartbeat {
   |            ^^^^^^^^^^^^^^^

warning: associated items `new` and `start` are never used
  --> src/placement-center/src/controller/placement/heartbeat.rs:35:12
   |
34 | impl BrokerHeartbeat {
   | -------------------- associated items in this implementation
35 |     pub fn new(
   |            ^^^
...
49 |     pub async fn start(&mut self) {
   |                  ^^^^^

warning: struct `ClusterController` is never constructed
  --> src/placement-center/src/controller/placement/controller.rs:24:12
   |
24 | pub struct ClusterController {
   |            ^^^^^^^^^^^^^^^^^

warning: associated items `new` and `start_node_heartbeat_check` are never used
  --> src/placement-center/src/controller/placement/controller.rs:32:12
   |
31 | impl ClusterController {
   | ---------------------- associated items in this implementation
32 |     pub fn new(
   |            ^^^
...
48 |     pub async fn start_node_heartbeat_check(&self) {
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `remove_group_by_node` and `delete_node` are never used
   --> src/placement-center/src/core/share_sub.rs:100:12
    |
30  | impl ShareSubLeader {
    | ------------------- methods in this implementation
...
100 |     pub fn remove_group_by_node(
    |            ^^^^^^^^^^^^^^^^^^^^
...
133 |     pub fn delete_node(&self, cluster_name: &String, broker_id:...
    |            ^^^^^^^^^^^

warning: variants `Stoping` and `Stop` are never constructed
  --> src/placement-center/src/raft/metadata.rs:26:5
   |
22 | pub enum NodeState {
   |          --------- variants in this enum
...
26 |     Stoping,
   |     ^^^^^^^
27 |     Stop,
   |     ^^^^
   |
   = note: `NodeState` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `set_leader` and `leader_alive` are never used
   --> src/placement-center/src/raft/metadata.rs:92:12
    |
39  | impl RaftGroupMetadata {
    | ---------------------- methods in this implementation
...
92  |     pub fn set_leader(&mut self, leader: BrokerNode) {
    |            ^^^^^^^^^^
...
115 |     pub fn leader_alive(&self) -> bool {
    |            ^^^^^^^^^^^^

warning: associated items `new_with_conf_state` and `initialize_with_conf_state` are never used
  --> src/placement-center/src/raft/storage.rs:40:12
   |
35 | impl RaftRocksDBStorage {
   | ----------------------- associated items in this implementation
...
40 |     pub fn new_with_conf_state<T>(
   |            ^^^^^^^^^^^^^^^^^^^
...
52 |     pub fn initialize_with_conf_state<T>(&self, conf_state: T)
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `mqtt_cache` is never read
  --> src/placement-center/src/server/grpc/service_mqtt.rs:40:5
   |
38 | pub struct GrpcMqttService {
   |            --------------- field in this struct
39 |     cluster_cache: Arc<PlacementCacheManager>,
40 |     mqtt_cache: Arc<MqttCacheManager>,
   |     ^^^^^^^^^^

warning: method `get_segment` is never used
  --> src/placement-center/src/storage/journal/segment.rs:72:12
   |
50 | impl SegmentStorage {
   | ------------------- method in this implementation
...
72 |     pub fn get_segment(
   |            ^^^^^^^^^^^

warning: methods `get_all_shard`, `shard_list`, and `segment_list` are never used
   --> src/placement-center/src/storage/journal/shard.rs:90:12
    |
37  | impl ShardStorage {
    | ----------------- methods in this implementation
...
90  |     pub fn get_all_shard(&self, cluster_name: &String) -> Vec<S...
    |            ^^^^^^^^^^^^^
...
96  |     pub fn shard_list(&self, cluster_name: String) -> Vec<Shard...
    |            ^^^^^^^^^^
...
127 |     pub fn segment_list(&self, cluster_name: String, shard_name...
    |            ^^^^^^^^^^^^

warning: function `key_resource_acl` is never used
  --> src/placement-center/src/storage/keys.rs:77:8
   |
77 | pub fn key_resource_acl(cluster_name: String, resource_key: Stri...
   |        ^^^^^^^^^^^^^^^^

warning: struct `AclStorage` is never constructed
  --> src/placement-center/src/storage/placement/acl.rs:19:12
   |
19 | pub struct AclStorage {
   |            ^^^^^^^^^^

warning: associated items `new`, `save`, `delete`, and `get` are never used
  --> src/placement-center/src/storage/placement/acl.rs:24:12
   |
23 | impl AclStorage {
   | --------------- associated items in this implementation
24 |     pub fn new(rocksdb_engine_handler: Arc<RocksDBEngine>) -> Se...
   |            ^^^
...
29 |     pub fn save(
   |            ^^^^
...
47 |     pub fn delete(
   |            ^^^^^^
...
64 |     pub fn get(
   |            ^^^

warning: methods `get` and `delete` are never used
  --> src/placement-center/src/storage/placement/cluster.rs:50:12
   |
27 | impl ClusterStorage {
   | ------------------- methods in this implementation
...
50 |     pub fn get(
   |            ^^^
...
70 |     pub fn delete(
   |            ^^^^^^

warning: method `get` is never used
  --> src/placement-center/src/storage/placement/node.rs:60:12
   |
27 | impl NodeStorage {
   | ---------------- method in this implementation
...
60 |     pub fn get(
   |            ^^^

warning: method `entrys` is never used
   --> src/placement-center/src/storage/placement/raft.rs:174:12
    |
48  | impl RaftMachineStorage {
    | ----------------------- method in this implementation
...
174 |     pub fn entrys(&self, low: u64, high: u64) -> Vec<Entry> {
    |            ^^^^^^

warning: method `read_str` is never used
  --> src/placement-center/src/storage/rocksdb.rs:83:12
   |
39 | impl RocksDBEngine {
   | ------------------ method in this implementation
...
83 |     pub fn read_str(&self, cf: &ColumnFamily, key: &str) -> Resu...
   |            ^^^^^^^^

warning: unused `Result` that must be used
  --> src/placement-center/src/raft/route/kv.rs:38:9
   |
38 |         self.kv_storage.set(req.key, req.value);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
38 |         let _ = self.kv_storage.set(req.key, req.value);
   |         +++++++

warning: unused `Result` that must be used
  --> src/placement-center/src/raft/route/kv.rs:46:9
   |
46 |         self.kv_storage.delete(req.key);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
46 |         let _ = self.kv_storage.delete(req.key);
   |         +++++++

warning: unused import: `Mutex`
  --> src/journal-server/src/lib.rs:25:23
   |
25 |     sync::{broadcast, Mutex},
   |                       ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `ResponseCommon`
  --> src/journal-server/src/network/response.rs:18:70
   |
18 | ...Header, RequestCommon, ResponseCommon},
   |                           ^^^^^^^^^^^^^^

warning: unused variable: `conf`
  --> src/journal-server/src/server/mod.rs:38:9
   |
38 |     let conf = journal_server_conf();
   |         ^^^^ help: if this is intentional, prefix it with an underscore: `_conf`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `data`
  --> src/journal-server/src/network/command.rs:32:45
   |
32 |             StorageEnginePacket::ProduceReq(data) => {
   |                                             ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `data`
  --> src/journal-server/src/network/command.rs:35:43
   |
35 |             StorageEnginePacket::FetchReq(data) => {
   |                                           ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: struct `RaftGroupManager` is never constructed
  --> src/journal-server/src/raft/group.rs:19:12
   |
19 | pub struct RaftGroupManager {
   |            ^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: associated function `new` is never used
  --> src/journal-server/src/raft/group.rs:24:12
   |
23 | impl RaftGroupManager {
   | --------------------- associated function in this implementation
24 |     pub fn new() -> Self {
   |            ^^^

warning: struct `SegmentStatusMachine` is never constructed
  --> src/journal-server/src/raft/machine.rs:15:12
   |
15 | pub struct SegmentStatusMachine {}
   |            ^^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/journal-server/src/raft/machine.rs:18:12
   |
17 | impl SegmentStatusMachine {
   | ------------------------- associated function in this implementation
18 |     pub fn new() -> Self {
   |            ^^^

warning: struct `SegmentStorage` is never constructed
  --> src/journal-server/src/raft/starage.rs:15:12
   |
15 | pub struct SegmentStorage {}
   |            ^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/journal-server/src/raft/starage.rs:18:12
   |
17 | impl SegmentStorage {
   | ------------------- associated function in this implementation
18 |     pub fn new() -> Self {
   |            ^^^

warning: struct `Record` is never constructed
  --> src/journal-server/src/record/record.rs:19:12
   |
19 | pub struct Record {
   |            ^^^^^^

warning: struct `RecordBatch` is never constructed
  --> src/journal-server/src/record/record_batch.rs:15:12
   |
15 | pub struct RecordBatch {
   |            ^^^^^^^^^^^

warning: struct `Header` is never constructed
  --> src/journal-server/src/record/header.rs:17:12
   |
17 | pub struct Header {
   |            ^^^^^^

warning: associated function `new` is never used
  --> src/journal-server/src/record/header.rs:23:12
   |
22 | impl Header {
   | ----------- associated function in this implementation
23 |     pub fn new(key: String, value: Bytes) -> Self {
   |            ^^^

warning: function `start_quic_server` is never used
  --> src/journal-server/src/server/mod.rs:37:14
   |
37 | pub async fn start_quic_server() {
   |              ^^^^^^^^^^^^^^^^^

warning: method `remove` is never used
  --> src/journal-server/src/server/tcp/connection.rs:58:12
   |
36 | impl ConnectionManager {
   | ---------------------- method in this implementation
...
58 |     pub fn remove(&self, connection_id: u64) {
   |            ^^^^^^

warning: method `connection_id` is never used
   --> src/journal-server/src/server/tcp/connection.rs:121:12
    |
108 | impl Connection {
    | --------------- method in this implementation
...
121 |     pub fn connection_id(&self) -> u64 {
    |            ^^^^^^^^^^^^^

warning: fields `request_queue_rx` and `response_queue_rx` are never read
  --> src/journal-server/src/server/tcp/tcp_server.rs:37:5
   |
31 | pub struct TcpServer {
   |            --------- fields in this struct
...
37 |     request_queue_rx: Receiver<RequestPackage>,
   |     ^^^^^^^^^^^^^^^^
38 |     response_queue_sx: Sender<ResponsePackage>,
39 |     response_queue_rx: Receiver<ResponsePackage>,
   |     ^^^^^^^^^^^^^^^^^

warning: `placement-center` (lib) generated 47 warnings (run `cargo fix --lib -p placement-center` to apply 21 suggestions)
warning: `journal-server` (lib) generated 19 warnings (run `cargo fix --lib -p journal-server` to apply 5 suggestions)
warning: unused import: `super::connection::Connection`
  --> src/mqtt-broker/src/handler/topic.rs:27:5
   |
27 | use super::connection::Connection;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self::plaintext::Plaintext`
  --> src/mqtt-broker/src/security/authentication/mod.rs:15:5
   |
15 | use self::plaintext::Plaintext;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::handler::cache_manager::CacheManager`
  --> src/mqtt-broker/src/security/authentication/mod.rs:16:5
   |
16 | use crate::handler::cache_manager::CacheManager;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ConnectProperties`, `Login`
  --> src/mqtt-broker/src/security/authentication/mod.rs:19:30
   |
19 | use protocol::mqtt::common::{ConnectProperties, Login};
   |                              ^^^^^^^^^^^^^^^^^  ^^^^^

warning: unused import: `sync::Arc`
  --> src/mqtt-broker/src/security/authentication/mod.rs:20:28
   |
20 | use std::{net::SocketAddr, sync::Arc};
   |                            ^^^^^^^^^

warning: unused import: `connection::Connection`
  --> src/mqtt-broker/src/server/http/cache.rs:21:9
   |
21 |         connection::Connection,
   |         ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `cluster`
  --> src/mqtt-broker/src/subscribe/sub_exclusive.rs:30:29
   |
30 | use metadata_struct::mqtt::{cluster, message::MQTTMessage};
   |                             ^^^^^^^

warning: unused import: `crate::security::AuthStorageAdapter`
  --> src/mqtt-broker/src/handler/cache_manager.rs:17:5
   |
17 | use crate::security::AuthStorageAdapter;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `topic_name`
  --> src/mqtt-broker/src/handler/topic.rs:36:24
   |
36 | pub fn is_system_topic(topic_name: String) -> bool {
   |                        ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_topic_name`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `addr`
  --> src/mqtt-broker/src/security/authentication/mod.rs:33:24
   |
33 | pub fn is_ip_blacklist(addr: &SocketAddr) -> bool {
   |                        ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`

warning: unused variable: `req`
  --> src/mqtt-broker/src/server/grpc/services.rs:60:13
   |
60 |         let req = request.into_inner();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_req`

warning: unused variable: `topic_name`
  --> src/mqtt-broker/src/subscribe/sub_common.rs:43:25
   |
43 | pub fn path_contain_sub(topic_name: &String) -> bool {
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_topic_name`

warning: constant `SYSTEM_TOPIC_BROKERS` is never used
  --> src/mqtt-broker/src/handler/topic.rs:29:11
   |
29 | pub const SYSTEM_TOPIC_BROKERS: &str = "$SYS/brokers";
   |           ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `SYSTEM_TOPIC_BROKERS_VERSION` is never used
  --> src/mqtt-broker/src/handler/topic.rs:30:11
   |
30 | pub const SYSTEM_TOPIC_BROKERS_VERSION: &str = "$SYS/brokers/${nod...
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `SYSTEM_TOPIC_BROKERS_UPTIME` is never used
  --> src/mqtt-broker/src/handler/topic.rs:31:11
   |
31 | pub const SYSTEM_TOPIC_BROKERS_UPTIME: &str = "$SYS/brokers/${node...
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `SYSTEM_TOPIC_BROKERS_DATETIME` is never used
  --> src/mqtt-broker/src/handler/topic.rs:32:11
   |
32 | pub const SYSTEM_TOPIC_BROKERS_DATETIME: &str = "$SYS/brokers/${no...
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `SYSTEM_TOPIC_BROKERS_SYSDESCR` is never used
  --> src/mqtt-broker/src/handler/topic.rs:33:11
   |
33 | pub const SYSTEM_TOPIC_BROKERS_SYSDESCR: &str = "$SYS/brokers/${no...
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `SYSTEM_TOPIC_BROKERS_CLIENTS` is never used
  --> src/mqtt-broker/src/handler/topic.rs:34:11
   |
34 | pub const SYSTEM_TOPIC_BROKERS_CLIENTS: &str = "$SYS/brokers/${nod...
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `is_system_topic` is never used
  --> src/mqtt-broker/src/handler/topic.rs:36:8
   |
36 | pub fn is_system_topic(topic_name: String) -> bool {
   |        ^^^^^^^^^^^^^^^

warning: function `payload_format_validator` is never used
  --> src/mqtt-broker/src/handler/topic.rs:40:8
   |
40 | pub fn payload_format_validator(
   |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `metrics_request_packet_incr` is never used
  --> src/mqtt-broker/src/metrics/mod.rs:57:8
   |
57 | pub fn metrics_request_packet_incr(lable: &str) {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `metrics_response_packet_incr` is never used
  --> src/mqtt-broker/src/metrics/mod.rs:63:8
   |
63 | pub fn metrics_response_packet_incr(lable: &str) {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `metrics_connection_num` is never used
  --> src/mqtt-broker/src/metrics/mod.rs:81:8
   |
81 | pub fn metrics_connection_num(lable: &str, len: i64) {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: function `metrics_heartbeat_keep_alive_run_info` is never used
  --> src/mqtt-broker/src/metrics/mod.rs:87:8
   |
87 | pub fn metrics_heartbeat_keep_alive_run_info(time: u128) {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `Acl` is never constructed
  --> src/mqtt-broker/src/security/acl/mod.rs:15:12
   |
15 | pub struct Acl {
   |            ^^^

warning: enum `AclAllow` is never used
  --> src/mqtt-broker/src/security/acl/mod.rs:24:10
   |
24 | pub enum AclAllow {
   |          ^^^^^^^^

warning: enum `AclAccess` is never used
  --> src/mqtt-broker/src/security/acl/mod.rs:29:10
   |
29 | pub enum AclAccess {
   |          ^^^^^^^^^

warning: variant `QUIC` is never constructed
  --> src/mqtt-broker/src/server/connection.rs:26:5
   |
22 | pub enum NetworkConnectionType {
   |          --------------------- variant in this enum
...
26 |     QUIC,
   |     ^^^^
   |
   = note: `NetworkConnectionType` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `mqtt-broker` (lib) generated 28 warnings (run `cargo fix --lib -p mqtt-broker` to apply 11 suggestions)
    Finished dev [unoptimized + debuginfo] target(s) in 0.59s
     Running `target/debug/placement-center --conf=config/placement-center.toml`
2024-08-08 19:20:26 INFO Raft Node inter-node communication management thread started successfully
2024-08-08 19:20:26 INFO Starts the thread that sends Raft messages to other nodes
2024-08-08 19:20:26 INFO RobustMQ Meta Grpc Server start success. bind addr:0.0.0.0:1228
2024-08-08 19:20:26 INFO Placement Center HTTP Server start success. bind addr:0.0.0.0:1227
2024-08-08 19:20:27 INFO Node Raft Role changes from  【Follower】 to 【Leader】
>> save entry index:194, value:Entry { entry_type: EntryNormal, term: 8, index: 194, data: [], context: [], sync_log: false }
2024-08-08 19:20:27 INFO save hardState!!!,len:HardState { term: 8, vote: 1, commit: 193 }
2024-08-08 19:20:27 INFO save light rd!!!,commit:194
>> commit entry index:194
warning: unused import: `Route`
  --> src/common/base/src/metrics/mod.rs:16:26
   |
16 | use axum::routing::{get, Route};
   |                          ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `broker_mqtt::BrokerMQTTConfig`, `read_file`
   --> src/common/base/src/config/broker_mqtt.rs:152:25
    |
152 |     use crate::config::{broker_mqtt::BrokerMQTTConfig, read_file};
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^

warning: unused imports: `broker_mqtt_conf`, `init_broker_mqtt_conf_by_path`
   --> src/common/base/src/config/broker_mqtt.rs:154:17
    |
154 |     use super::{broker_mqtt_conf, init_broker_mqtt_conf_by_path};
    |                 ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method `max_blocking_threads` is never used
  --> src/common/base/src/runtime.rs:65:12
   |
59 | impl RuntimeBuilder {
   | ------------------- method in this implementation
...
65 |     pub fn max_blocking_threads(&mut self, val: usize) -> &mut Self {
   |            ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: `common-base` (lib) generated 4 warnings (run `cargo fix --lib -p common-base` to apply 3 suggestions)
warning: unused import: `info`
  --> src/clients/src/placement/mod.rs:22:18
   |
22 |     log::{error, info},
   |                  ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unreachable pattern
   --> src/clients/src/broker_mqtt/mod.rs:106:17
    |
106 |                 _ => {
    |                 ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: `clients` (lib) generated 2 warnings (run `cargo fix --lib -p clients` to apply 1 suggestion)
warning: unused variable: `shard_name`
  --> src/storage-adapter/src/memory/mod.rs:55:36
   |
55 | ...ate_key_index(&self, shard_name: String, key: String, offset:...
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `key`
  --> src/storage-adapter/src/memory/mod.rs:55:56
   |
55 | ...f, shard_name: String, key: String, offset: usize) {}
   |                           ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `offset`
  --> src/storage-adapter/src/memory/mod.rs:55:69
   |
55 | ...String, key: String, offset: usize) {}
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_offset`

warning: unused variable: `shard_name`
  --> src/storage-adapter/src/memory/mod.rs:57:38
   |
57 | ...e_value_index(&self, shard_name: String, key: String) {}
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `key`
  --> src/storage-adapter/src/memory/mod.rs:57:58
   |
57 | ...f, shard_name: String, key: String) {}
   |                           ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `shard_name`
  --> src/storage-adapter/src/memory/mod.rs:59:42
   |
59 | ...mestamp_index(&self, shard_name: String, key: String, create_...
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `key`
  --> src/storage-adapter/src/memory/mod.rs:59:62
   |
59 | ...f, shard_name: String, key: String, create_time: u128) {}
   |                           ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `create_time`
  --> src/storage-adapter/src/memory/mod.rs:59:75
   |
59 | ...ring, key: String, create_time: u128) {}
   |                       ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_create_time`

warning: unused variable: `shard_name`
  --> src/storage-adapter/src/memory/mod.rs:61:42
   |
61 | ...mestamp_index(&self, shard_name: String, key: String) {}
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `key`
  --> src/storage-adapter/src/memory/mod.rs:61:62
   |
61 | ...f, shard_name: String, key: String) {}
   |                           ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `shard_name`
   --> src/storage-adapter/src/memory/mod.rs:180:9
    |
180 |         shard_name: String,
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `start_timestamp`
   --> src/storage-adapter/src/memory/mod.rs:181:9
    |
181 |         start_timestamp: u128,
    |         ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_start_timestamp`

warning: unused variable: `end_timestamp`
   --> src/storage-adapter/src/memory/mod.rs:182:9
    |
182 |         end_timestamp: u128,
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_end_timestamp`

warning: unused variable: `record_num`
   --> src/storage-adapter/src/memory/mod.rs:183:9
    |
183 |         record_num: Option<usize>,
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_record_num`

warning: unused variable: `record_size`
   --> src/storage-adapter/src/memory/mod.rs:184:9
    |
184 |         record_size: Option<usize>,
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_record_size`

warning: unused variable: `shard_name`
   --> src/storage-adapter/src/memory/mod.rs:191:9
    |
191 |         shard_name: String,
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `key`
   --> src/storage-adapter/src/memory/mod.rs:192:9
    |
192 |         key: String,
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `shard_config`
  --> src/storage-adapter/src/mysql/mod.rs:86:9
   |
86 |         shard_config: ShardConfig,
   |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_config`

warning: unused variable: `shard_name`
  --> src/storage-adapter/src/placement/mod.rs:46:9
   |
46 |         shard_name: String,
   |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: unused variable: `shard_config`
  --> src/storage-adapter/src/placement/mod.rs:47:9
   |
47 |         shard_config: ShardConfig,
   |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_config`

warning: unused variable: `shard_name`
  --> src/storage-adapter/src/placement/mod.rs:52:34
   |
52 | ... delete_shard(&self, shard_name: String) -> Result<(), Robust...
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shard_name`

warning: `storage-adapter` (lib) generated 21 warnings (run `cargo fix --lib -p storage-adapter` to apply 21 suggestions)
warning: unused import: `Mutex`
  --> src/journal-server/src/lib.rs:25:23
   |
25 |     sync::{broadcast, Mutex},
   |                       ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `ResponseCommon`
  --> src/journal-server/src/network/response.rs:18:70
   |
18 | ...Header, RequestCommon, ResponseCommon},
   |                           ^^^^^^^^^^^^^^

warning: unused variable: `conf`
  --> src/journal-server/src/server/mod.rs:38:9
   |
38 |     let conf = journal_server_conf();
   |         ^^^^ help: if this is intentional, prefix it with an underscore: `_conf`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `data`
  --> src/journal-server/src/network/command.rs:32:45
   |
32 |             StorageEnginePacket::ProduceReq(data) => {
   |                                             ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `data`
  --> src/journal-server/src/network/command.rs:35:43
   |
35 |             StorageEnginePacket::FetchReq(data) => {
   |                                           ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: struct `RaftGroupManager` is never constructed
  --> src/journal-server/src/raft/group.rs:19:12
   |
19 | pub struct RaftGroupManager {
   |            ^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: associated function `new` is never used
  --> src/journal-server/src/raft/group.rs:24:12
   |
23 | impl RaftGroupManager {
   | --------------------- associated function in this implementation
24 |     pub fn new() -> Self {
   |            ^^^

warning: struct `SegmentStatusMachine` is never constructed
  --> src/journal-server/src/raft/machine.rs:15:12
   |
15 | pub struct SegmentStatusMachine {}
   |            ^^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/journal-server/src/raft/machine.rs:18:12
   |
17 | impl SegmentStatusMachine {
   | ------------------------- associated function in this implementation
18 |     pub fn new() -> Self {
   |            ^^^

warning: struct `SegmentStorage` is never constructed
  --> src/journal-server/src/raft/starage.rs:15:12
   |
15 | pub struct SegmentStorage {}
   |            ^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/journal-server/src/raft/starage.rs:18:12
   |
17 | impl SegmentStorage {
   | ------------------- associated function in this implementation
18 |     pub fn new() -> Self {
   |            ^^^

warning: struct `Record` is never constructed
  --> src/journal-server/src/record/record.rs:19:12
   |
19 | pub struct Record {
   |            ^^^^^^

warning: struct `RecordBatch` is never constructed
  --> src/journal-server/src/record/record_batch.rs:15:12
   |
15 | pub struct RecordBatch {
   |            ^^^^^^^^^^^

warning: struct `Header` is never constructed
  --> src/journal-server/src/record/header.rs:17:12
   |
17 | pub struct Header {
   |            ^^^^^^

warning: associated function `new` is never used
  --> src/journal-server/src/record/header.rs:23:12
   |
22 | impl Header {
   | ----------- associated function in this implementation
23 |     pub fn new(key: String, value: Bytes) -> Self {
   |            ^^^

warning: function `start_quic_server` is never used
  --> src/journal-server/src/server/mod.rs:37:14
   |
37 | pub async fn start_quic_server() {
   |              ^^^^^^^^^^^^^^^^^

warning: method `remove` is never used
  --> src/journal-server/src/server/tcp/connection.rs:58:12
   |
36 | impl ConnectionManager {
   | ---------------------- method in this implementation
...
58 |     pub fn remove(&self, connection_id: u64) {
   |            ^^^^^^

warning: method `connection_id` is never used
   --> src/journal-server/src/server/tcp/connection.rs:121:12
    |
108 | impl Connection {
    | --------------- method in this implementation
...
121 |     pub fn connection_id(&self) -> u64 {
    |            ^^^^^^^^^^^^^

warning: fields `request_queue_rx` and `response_queue_rx` are never read
  --> src/journal-server/src/server/tcp/tcp_server.rs:37:5
   |
31 | pub struct TcpServer {
   |            --------- fields in this struct
...
37 |     request_queue_rx: Receiver<RequestPackage>,
   |     ^^^^^^^^^^^^^^^^
38 |     response_queue_sx: Sender<ResponsePackage>,
39 |     response_queue_rx: Receiver<ResponsePackage>,
   |     ^^^^^^^^^^^^^^^^^

warning: `journal-server` (lib) generated 19 warnings (run `cargo fix --lib -p journal-server` to apply 5 suggestions)
warning: unused import: `controller::placement::controller::ClusterController`
  --> src/placement-center/src/lib.rs:27:5
   |
27 | use controller::placement::controller::ClusterController;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `cluster::ClusterStorage`, `journal::shard::ShardStorage`, `node::NodeStorage`
  --> src/placement-center/src/controller/journal/controller.rs:20:9
   |
20 |         journal::shard::ShardStorage,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
21 |         placement::{cluster::ClusterStorage, node::NodeStorage},
   |                     ^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^

warning: unused import: `protocol::placement_center::generate::common::ClusterType`
  --> src/placement-center/src/controller/journal/controller.rs:26:5
   |
26 | use protocol::placement_center::generate::common::ClusterType;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `SystemTime`, `UNIX_EPOCH`
  --> src/placement-center/src/server/grpc/service_placement.rs:40:17
   |
40 | use std::time::{SystemTime, UNIX_EPOCH};
   |                 ^^^^^^^^^^  ^^^^^^^^^^

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/cluster.rs:19:32
   |
19 | ...c fn cluster_get(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/cluster.rs:23:32
   |
23 | ...c fn cluster_set(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/cluster.rs:27:33
   |
27 | ... fn cluster_list(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/user.rs:18:29
   |
18 | ...sync fn user_get(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/user.rs:22:32
   |
22 | ...c fn user_create(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/user.rs:26:32
   |
26 | ...c fn user_update(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/user.rs:30:32
   |
30 | ...c fn user_delete(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
  --> src/placement-center/src/server/http/mqtt/user.rs:34:30
   |
34 | ...ync fn user_list(State(state): State<HttpServerState>) -> Str...
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `req`
   --> src/placement-center/src/server/grpc/service_journal.rs:128:13
    |
128 |         let req = request.into_inner();
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_req`

warning: variable does not need to be mutable
   --> src/placement-center/src/server/grpc/service_journal.rs:132:13
    |
132 |         let mut result = GetShardReply::default();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `req`
   --> src/placement-center/src/server/grpc/service_placement.rs:158:13
    |
158 |         let req = request.into_inner();
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_req`

warning: unused variable: `cf`
  --> src/placement-center/src/storage/journal/shard.rs:91:13
   |
91 |         let cf = self.rocksdb_engine_handler.cf_cluster();
   |             ^^ help: if this is intentional, prefix it with an underscore: `_cf`

warning: unused variable: `cluster_name`
  --> src/placement-center/src/storage/journal/shard.rs:90:33
   |
90 | ...t_all_shard(&self, cluster_name: &String) -> Vec<String> {
   |                       ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cluster_name`

warning: unused variable: `k`
  --> src/placement-center/src/storage/placement/cluster.rs:97:18
   |
97 |             for (k, v) in raw {
   |                  ^ help: if this is intentional, prefix it with an underscore: `_k`

warning: variable does not need to be mutable
  --> src/placement-center/src/storage/placement/node.rs:81:13
   |
81 |         let mut result = Vec::new();
   |             ----^^^^^^
   |             |
   |             help: remove this `mut`

warning: unused variable: `config`
  --> src/placement-center/src/storage/placement/raft.rs:50:13
   |
50 |         let config = placement_center_conf();
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `placement_center_storage`
   --> src/placement-center/src/lib.rs:189:9
    |
189 |         placement_center_storage: Arc<RaftMachineApply>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_placement_center_storage`

warning: methods `remove_topic` and `remove_user` are never used
  --> src/placement-center/src/cache/mqtt.rs:60:12
   |
36 | impl MqttCacheManager {
   | --------------------- methods in this implementation
...
60 |     pub fn remove_topic(&self, cluster_name: &String, topic_name...
   |            ^^^^^^^^^^^^
...
76 |     pub fn remove_user(&self, cluster_name: &String, username: &...
   |            ^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: fields `cluster_cache` and `engine_cache` are never read
  --> src/placement-center/src/controller/journal/segment_replica.rs:21:5
   |
20 | pub struct SegmentReplicaAlgorithm {
   |            ----------------------- fields in this struct
21 |     cluster_cache: Arc<PlacementCacheManager>,
   |     ^^^^^^^^^^^^^
22 |     engine_cache: Arc<JournalCacheManager>,
   |     ^^^^^^^^^^^^

warning: struct `PreferredElection` is never constructed
  --> src/placement-center/src/controller/journal/preferred_election.rs:19:12
   |
19 | pub struct PreferredElection {
   |            ^^^^^^^^^^^^^^^^^

warning: associated items `new` and `start` are never used
  --> src/placement-center/src/controller/journal/preferred_election.rs:24:12
   |
23 | impl PreferredElection {
   | ---------------------- associated items in this implementation
24 |     pub fn new(engine_cache: Arc<RwLock<JournalCacheManager>>) -...
   |            ^^^
...
28 |     pub async fn start(&self) {}
   |                  ^^^^^

warning: struct `StorageEngineController` is never constructed
  --> src/placement-center/src/controller/journal/controller.rs:30:12
   |
30 | pub struct StorageEngineController {
   |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `start`, `load_cache`, `resource_manager_thread`, and `preferred_replica_election` are never used
  --> src/placement-center/src/controller/journal/controller.rs:38:12
   |
37 | impl StorageEngineController {
   | ---------------------------- associated items in this implementation
38 |     pub fn new(
   |            ^^^
...
54 |     pub async fn start(&self) {
   |                  ^^^^^
...
60 |     pub fn load_cache(&self) {
   |            ^^^^^^^^^^
...
85 |     pub fn resource_manager_thread(&self) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^
...
89 |     pub fn preferred_replica_election(&self) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `BrokerHeartbeat` is never constructed
  --> src/placement-center/src/controller/placement/heartbeat.rs:27:12
   |
27 | pub struct BrokerHeartbeat {
   |            ^^^^^^^^^^^^^^^

warning: associated items `new` and `start` are never used
  --> src/placement-center/src/controller/placement/heartbeat.rs:35:12
   |
34 | impl BrokerHeartbeat {
   | -------------------- associated items in this implementation
35 |     pub fn new(
   |            ^^^
...
49 |     pub async fn start(&mut self) {
   |                  ^^^^^

warning: struct `ClusterController` is never constructed
  --> src/placement-center/src/controller/placement/controller.rs:24:12
   |
24 | pub struct ClusterController {
   |            ^^^^^^^^^^^^^^^^^

warning: associated items `new` and `start_node_heartbeat_check` are never used
  --> src/placement-center/src/controller/placement/controller.rs:32:12
   |
31 | impl ClusterController {
   | ---------------------- associated items in this implementation
32 |     pub fn new(
   |            ^^^
...
48 |     pub async fn start_node_heartbeat_check(&self) {
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `remove_group_by_node` and `delete_node` are never used
   --> src/placement-center/src/core/share_sub.rs:100:12
    |
30  | impl ShareSubLeader {
    | ------------------- methods in this implementation
...
100 |     pub fn remove_group_by_node(
    |            ^^^^^^^^^^^^^^^^^^^^
...
133 |     pub fn delete_node(&self, cluster_name: &String, broker_id:...
    |            ^^^^^^^^^^^

warning: variants `Stoping` and `Stop` are never constructed
  --> src/placement-center/src/raft/metadata.rs:26:5
   |
22 | pub enum NodeState {
   |          --------- variants in this enum
...
26 |     Stoping,
   |     ^^^^^^^
27 |     Stop,
   |     ^^^^
   |
   = note: `NodeState` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `set_leader` and `leader_alive` are never used
   --> src/placement-center/src/raft/metadata.rs:92:12
    |
39  | impl RaftGroupMetadata {
    | ---------------------- methods in this implementation
...
92  |     pub fn set_leader(&mut self, leader: BrokerNode) {
    |            ^^^^^^^^^^
...
115 |     pub fn leader_alive(&self) -> bool {
    |            ^^^^^^^^^^^^

warning: associated items `new_with_conf_state` and `initialize_with_conf_state` are never used
  --> src/placement-center/src/raft/storage.rs:40:12
   |
35 | impl RaftRocksDBStorage {
   | ----------------------- associated items in this implementation
...
40 |     pub fn new_with_conf_state<T>(
   |            ^^^^^^^^^^^^^^^^^^^
...
52 |     pub fn initialize_with_conf_state<T>(&self, conf_state: T)
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `mqtt_cache` is never read
  --> src/placement-center/src/server/grpc/service_mqtt.rs:40:5
   |
38 | pub struct GrpcMqttService {
   |            --------------- field in this struct
39 |     cluster_cache: Arc<PlacementCacheManager>,
40 |     mqtt_cache: Arc<MqttCacheManager>,
   |     ^^^^^^^^^^

warning: method `get_segment` is never used
  --> src/placement-center/src/storage/journal/segment.rs:72:12
   |
50 | impl SegmentStorage {
   | ------------------- method in this implementation
...
72 |     pub fn get_segment(
   |            ^^^^^^^^^^^

warning: methods `get_all_shard`, `shard_list`, and `segment_list` are never used
   --> src/placement-center/src/storage/journal/shard.rs:90:12
    |
37  | impl ShardStorage {
    | ----------------- methods in this implementation
...
90  |     pub fn get_all_shard(&self, cluster_name: &String) -> Vec<S...
    |            ^^^^^^^^^^^^^
...
96  |     pub fn shard_list(&self, cluster_name: String) -> Vec<Shard...
    |            ^^^^^^^^^^
...
127 |     pub fn segment_list(&self, cluster_name: String, shard_name...
    |            ^^^^^^^^^^^^

warning: function `key_resource_acl` is never used
  --> src/placement-center/src/storage/keys.rs:77:8
   |
77 | pub fn key_resource_acl(cluster_name: String, resource_key: Stri...
   |        ^^^^^^^^^^^^^^^^

warning: struct `AclStorage` is never constructed
  --> src/placement-center/src/storage/placement/acl.rs:19:12
   |
19 | pub struct AclStorage {
   |            ^^^^^^^^^^

warning: associated items `new`, `save`, `delete`, and `get` are never used
  --> src/placement-center/src/storage/placement/acl.rs:24:12
   |
23 | impl AclStorage {
   | --------------- associated items in this implementation
24 |     pub fn new(rocksdb_engine_handler: Arc<RocksDBEngine>) -> Se...
   |            ^^^
...
29 |     pub fn save(
   |            ^^^^
...
47 |     pub fn delete(
   |            ^^^^^^
...
64 |     pub fn get(
   |            ^^^

warning: methods `get` and `delete` are never used
  --> src/placement-center/src/storage/placement/cluster.rs:50:12
   |
27 | impl ClusterStorage {
   | ------------------- methods in this implementation
...
50 |     pub fn get(
   |            ^^^
...
70 |     pub fn delete(
   |            ^^^^^^

warning: method `get` is never used
  --> src/placement-center/src/storage/placement/node.rs:60:12
   |
27 | impl NodeStorage {
   | ---------------- method in this implementation
...
60 |     pub fn get(
   |            ^^^

warning: method `entrys` is never used
   --> src/placement-center/src/storage/placement/raft.rs:174:12
    |
48  | impl RaftMachineStorage {
    | ----------------------- method in this implementation
...
174 |     pub fn entrys(&self, low: u64, high: u64) -> Vec<Entry> {
    |            ^^^^^^

warning: method `read_str` is never used
  --> src/placement-center/src/storage/rocksdb.rs:83:12
   |
39 | impl RocksDBEngine {
   | ------------------ method in this implementation
...
83 |     pub fn read_str(&self, cf: &ColumnFamily, key: &str) -> Resu...
   |            ^^^^^^^^

warning: unused `Result` that must be used
  --> src/placement-center/src/raft/route/kv.rs:38:9
   |
38 |         self.kv_storage.set(req.key, req.value);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
38 |         let _ = self.kv_storage.set(req.key, req.value);
   |         +++++++

warning: unused `Result` that must be used
  --> src/placement-center/src/raft/route/kv.rs:46:9
   |
46 |         self.kv_storage.delete(req.key);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
46 |         let _ = self.kv_storage.delete(req.key);
   |         +++++++

warning: `placement-center` (lib) generated 47 warnings (run `cargo fix --lib -p placement-center` to apply 21 suggestions)
warning: unused import: `super::connection::Connection`
  --> src/mqtt-broker/src/handler/topic.rs:27:5
   |
27 | use super::connection::Connection;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self::plaintext::Plaintext`
  --> src/mqtt-broker/src/security/authentication/mod.rs:15:5
   |
15 | use self::plaintext::Plaintext;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::handler::cache_manager::CacheManager`
  --> src/mqtt-broker/src/security/authentication/mod.rs:16:5
   |
16 | use crate::handler::cache_manager::CacheManager;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ConnectProperties`, `Login`
  --> src/mqtt-broker/src/security/authentication/mod.rs:19:30
   |
19 | use protocol::mqtt::common::{ConnectProperties, Login};
   |                              ^^^^^^^^^^^^^^^^^  ^^^^^

warning: unused import: `sync::Arc`
  --> src/mqtt-broker/src/security/authentication/mod.rs:20:28
   |
20 | use std::{net::SocketAddr, sync::Arc};
   |                            ^^^^^^^^^

warning: unused import: `connection::Connection`
  --> src/mqtt-broker/src/server/http/cache.rs:21:9
   |
21 |         connection::Connection,
   |         ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `cluster`
  --> src/mqtt-broker/src/subscribe/sub_exclusive.rs:30:29
   |
30 | use metadata_struct::mqtt::{cluster, message::MQTTMessage};
   |                             ^^^^^^^

warning: unused import: `crate::security::AuthStorageAdapter`
  --> src/mqtt-broker/src/handler/cache_manager.rs:17:5
   |
17 | use crate::security::AuthStorageAdapter;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `topic_name`
  --> src/mqtt-broker/src/handler/topic.rs:36:24
   |
36 | pub fn is_system_topic(topic_name: String) -> bool {
   |                        ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_topic_name`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `addr`
  --> src/mqtt-broker/src/security/authentication/mod.rs:33:24
   |
33 | pub fn is_ip_blacklist(addr: &SocketAddr) -> bool {
   |                        ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`

warning: unused variable: `req`
  --> src/mqtt-broker/src/server/grpc/services.rs:60:13
   |
60 |         let req = request.into_inner();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_req`

warning: unused variable: `topic_name`
  --> src/mqtt-broker/src/subscribe/sub_common.rs:43:25
   |
43 | pub fn path_contain_sub(topic_name: &String) -> bool {
   |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_topic_name`

warning: constant `SYSTEM_TOPIC_BROKERS` is never used
  --> src/mqtt-broker/src/handler/topic.rs:29:11
   |
29 | pub const SYSTEM_TOPIC_BROKERS: &str = "$SYS/brokers";
   |           ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `SYSTEM_TOPIC_BROKERS_VERSION` is never used
  --> src/mqtt-broker/src/handler/topic.rs:30:11
   |
30 | pub const SYSTEM_TOPIC_BROKERS_VERSION: &str = "$SYS/brokers/${nod...
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `SYSTEM_TOPIC_BROKERS_UPTIME` is never used
  --> src/mqtt-broker/src/handler/topic.rs:31:11
   |
31 | pub const SYSTEM_TOPIC_BROKERS_UPTIME: &str = "$SYS/brokers/${node...
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `SYSTEM_TOPIC_BROKERS_DATETIME` is never used
  --> src/mqtt-broker/src/handler/topic.rs:32:11
   |
32 | pub const SYSTEM_TOPIC_BROKERS_DATETIME: &str = "$SYS/brokers/${no...
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `SYSTEM_TOPIC_BROKERS_SYSDESCR` is never used
  --> src/mqtt-broker/src/handler/topic.rs:33:11
   |
33 | pub const SYSTEM_TOPIC_BROKERS_SYSDESCR: &str = "$SYS/brokers/${no...
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `SYSTEM_TOPIC_BROKERS_CLIENTS` is never used
  --> src/mqtt-broker/src/handler/topic.rs:34:11
   |
34 | pub const SYSTEM_TOPIC_BROKERS_CLIENTS: &str = "$SYS/brokers/${nod...
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `is_system_topic` is never used
  --> src/mqtt-broker/src/handler/topic.rs:36:8
   |
36 | pub fn is_system_topic(topic_name: String) -> bool {
   |        ^^^^^^^^^^^^^^^

warning: function `payload_format_validator` is never used
  --> src/mqtt-broker/src/handler/topic.rs:40:8
   |
40 | pub fn payload_format_validator(
   |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `metrics_request_packet_incr` is never used
  --> src/mqtt-broker/src/metrics/mod.rs:57:8
   |
57 | pub fn metrics_request_packet_incr(lable: &str) {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `metrics_response_packet_incr` is never used
  --> src/mqtt-broker/src/metrics/mod.rs:63:8
   |
63 | pub fn metrics_response_packet_incr(lable: &str) {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `metrics_connection_num` is never used
  --> src/mqtt-broker/src/metrics/mod.rs:81:8
   |
81 | pub fn metrics_connection_num(lable: &str, len: i64) {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: function `metrics_heartbeat_keep_alive_run_info` is never used
  --> src/mqtt-broker/src/metrics/mod.rs:87:8
   |
87 | pub fn metrics_heartbeat_keep_alive_run_info(time: u128) {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `Acl` is never constructed
  --> src/mqtt-broker/src/security/acl/mod.rs:15:12
   |
15 | pub struct Acl {
   |            ^^^

warning: enum `AclAllow` is never used
  --> src/mqtt-broker/src/security/acl/mod.rs:24:10
   |
24 | pub enum AclAllow {
   |          ^^^^^^^^

warning: enum `AclAccess` is never used
  --> src/mqtt-broker/src/security/acl/mod.rs:29:10
   |
29 | pub enum AclAccess {
   |          ^^^^^^^^^

warning: variant `QUIC` is never constructed
  --> src/mqtt-broker/src/server/connection.rs:26:5
   |
22 | pub enum NetworkConnectionType {
   |          --------------------- variant in this enum
...
26 |     QUIC,
   |     ^^^^
   |
   = note: `NetworkConnectionType` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `mqtt-broker` (lib) generated 28 warnings (run `cargo fix --lib -p mqtt-broker` to apply 11 suggestions)
    Finished dev [unoptimized + debuginfo] target(s) in 0.60s
     Running `target/debug/placement-center --conf=config/placement-center.toml`
2024-08-08 19:21:25 INFO Raft Node inter-node communication management thread started successfully
2024-08-08 19:21:25 INFO Starts the thread that sends Raft messages to other nodes
2024-08-08 19:21:25 INFO RobustMQ Meta Grpc Server start success. bind addr:0.0.0.0:1228
2024-08-08 19:21:25 INFO Placement Center HTTP Server start success. bind addr:0.0.0.0:1227
2024-08-08 19:21:26 INFO Node Raft Role changes from  【Follower】 to 【Leader】
>> save entry index:195, value:Entry { entry_type: EntryNormal, term: 9, index: 195, data: [], context: [], sync_log: false }
2024-08-08 19:21:26 INFO save hardState!!!,len:HardState { term: 9, vote: 1, commit: 194 }
2024-08-08 19:21:26 INFO save light rd!!!,commit:195
>> commit entry index:195
>> save entry index:196, value:Entry { entry_type: EntryNormal, term: 9, index: 196, data: [12, 0, 0, 0, 87, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 4, 116, 101, 115, 116, 26, 66, 123, 34, 117, 115, 101, 114, 110, 97, 109, 101, 34, 58, 34, 116, 101, 115, 116, 34, 44, 34, 112, 97, 115, 115, 119, 111, 114, 100, 34, 58, 34, 116, 101, 115, 116, 95, 112, 97, 115, 115, 119, 111, 114, 100, 34, 44, 34, 105, 115, 95, 115, 117, 112, 101, 114, 117, 115, 101, 114, 34, 58, 116, 114, 117, 101, 125], context: [1, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:196
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:196
>> save entry index:197, value:Entry { entry_type: EntryNormal, term: 9, index: 197, data: [14, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 13, 116, 101, 115, 116, 95, 112, 97, 115, 115, 119, 111, 114, 100, 26, 131, 1, 123, 34, 116, 111, 112, 105, 99, 95, 105, 100, 34, 58, 34, 49, 54, 97, 53, 48, 98, 97, 101, 102, 49, 55, 51, 52, 48, 56, 98, 57, 99, 55, 100, 50, 48, 98, 50, 54, 55, 56, 50, 48, 56, 57, 57, 34, 44, 34, 116, 111, 112, 105, 99, 95, 110, 97, 109, 101, 34, 58, 34, 116, 101, 115, 116, 95, 112, 97, 115, 115, 119, 111, 114, 100, 34, 44, 34, 114, 101, 116, 97, 105, 110, 95, 109, 101, 115, 115, 97, 103, 101, 34, 58, 110, 117, 108, 108, 44, 34, 114, 101, 116, 97, 105, 110, 95, 109, 101, 115, 115, 97, 103, 101, 95, 101, 120, 112, 105, 114, 101, 100, 95, 97, 116, 34, 58, 110, 117, 108, 108, 125], context: [2, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:197
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:197
>> save entry index:198, value:Entry { entry_type: EntryNormal, term: 9, index: 198, data: [14, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 32, 50, 48, 55, 53, 100, 52, 97, 97, 52, 53, 102, 51, 52, 57, 98, 56, 56, 52, 55, 48, 98, 100, 53, 54, 100, 55, 97, 99, 101, 102, 97, 97, 26, 150, 1, 123, 34, 116, 111, 112, 105, 99, 95, 105, 100, 34, 58, 34, 55, 55, 53, 97, 101, 55, 48, 99, 54, 54, 49, 100, 52, 49, 99, 52, 57, 101, 57, 56, 98, 57, 54, 99, 99, 52, 102, 54, 98, 52, 101, 54, 34, 44, 34, 116, 111, 112, 105, 99, 95, 110, 97, 109, 101, 34, 58, 34, 50, 48, 55, 53, 100, 52, 97, 97, 52, 53, 102, 51, 52, 57, 98, 56, 56, 52, 55, 48, 98, 100, 53, 54, 100, 55, 97, 99, 101, 102, 97, 97, 34, 44, 34, 114, 101, 116, 97, 105, 110, 95, 109, 101, 115, 115, 97, 103, 101, 34, 58, 110, 117, 108, 108, 44, 34, 114, 101, 116, 97, 105, 110, 95, 109, 101, 115, 115, 97, 103, 101, 95, 101, 120, 112, 105, 114, 101, 100, 95, 97, 116, 34, 58, 110, 117, 108, 108, 125], context: [3, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:198
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:198
>> save entry index:199, value:Entry { entry_type: EntryNormal, term: 9, index: 199, data: [17, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 15, 99, 108, 105, 101, 110, 116, 95, 105, 100, 95, 49, 49, 49, 49, 49, 26, 214, 1, 123, 34, 99, 108, 105, 101, 110, 116, 95, 105, 100, 34, 58, 34, 99, 108, 105, 101, 110, 116, 95, 105, 100, 95, 49, 49, 49, 49, 49, 34, 44, 34, 115, 101, 115, 115, 105, 111, 110, 95, 101, 120, 112, 105, 114, 121, 34, 58, 49, 48, 48, 48, 44, 34, 105, 115, 95, 99, 111, 110, 116, 97, 105, 110, 95, 108, 97, 115, 116, 95, 119, 105, 108, 108, 34, 58, 102, 97, 108, 115, 101, 44, 34, 108, 97, 115, 116, 95, 119, 105, 108, 108, 95, 100, 101, 108, 97, 121, 95, 105, 110, 116, 101, 114, 118, 97, 108, 34, 58, 110, 117, 108, 108, 44, 34, 99, 114, 101, 97, 116, 101, 95, 116, 105, 109, 101, 34, 58, 48, 44, 34, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 95, 105, 100, 34, 58, 110, 117, 108, 108, 44, 34, 98, 114, 111, 107, 101, 114, 95, 105, 100, 34, 58, 49, 44, 34, 114, 101, 99, 111, 110, 110, 101, 99, 116, 95, 116, 105, 109, 101, 34, 58, 49, 55, 50, 51, 49, 49, 54, 48, 57, 51, 44, 34, 100, 105, 115, 116, 105, 110, 99, 116, 95, 116, 105, 109, 101, 34, 58, 110, 117, 108, 108, 125], context: [4, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:199
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:199
>> save entry index:200, value:Entry { entry_type: EntryNormal, term: 9, index: 200, data: [2, 0, 0, 0, 119, 2, 0, 0, 0, 0, 0, 0, 10, 11, 114, 111, 98, 117, 115, 116, 95, 116, 101, 115, 116, 18, 7, 99, 108, 117, 115, 116, 101, 114, 18, 11, 114, 111, 98, 117, 115, 116, 95, 116, 101, 115, 116, 26, 209, 4, 123, 34, 115, 101, 115, 115, 105, 111, 110, 95, 101, 120, 112, 105, 114, 121, 95, 105, 110, 116, 101, 114, 118, 97, 108, 34, 58, 48, 44, 34, 116, 111, 112, 105, 99, 95, 97, 108, 105, 97, 115, 95, 109, 97, 120, 34, 58, 57, 57, 57, 44, 34, 109, 97, 120, 95, 113, 111, 115, 34, 58, 34, 65, 116, 77, 111, 115, 116, 79, 110, 99, 101, 34, 44, 34, 114, 101, 116, 97, 105, 110, 95, 97, 118, 97, 105, 108, 97, 98, 108, 101, 34, 58, 34, 69, 110, 97, 98, 108, 101, 34, 44, 34, 119, 105, 108, 100, 99, 97, 114, 100, 95, 115, 117, 98, 115, 99, 114, 105, 112, 116, 105, 111, 110, 95, 97, 118, 97, 105, 108, 97, 98, 108, 101, 34, 58, 34, 69, 110, 97, 98, 108, 101, 34, 44, 34, 109, 97, 120, 95, 112, 97, 99, 107, 101, 116, 95, 115, 105, 122, 101, 34, 58, 48, 44, 34, 115, 117, 98, 115, 99, 114, 105, 112, 116, 105, 111, 110, 95, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114, 115, 95, 97, 118, 97, 105, 108, 97, 98, 108, 101, 34, 58, 34, 69, 110, 97, 98, 108, 101, 34, 44, 34, 115, 104, 97, 114, 101, 100, 95, 115, 117, 98, 115, 99, 114, 105, 112, 116, 105, 111, 110, 95, 97, 118, 97, 105, 108, 97, 98, 108, 101, 34, 58, 34, 69, 110, 97, 98, 108, 101, 34, 44, 34, 115, 101, 114, 118, 101, 114, 95, 107, 101, 101, 112, 95, 97, 108, 105, 118, 101, 34, 58, 48, 44, 34, 114, 101, 99, 101, 105, 118, 101, 95, 109, 97, 120, 34, 58, 48, 44, 34, 115, 101, 99, 114, 101, 116, 95, 102, 114, 101, 101, 95, 108, 111, 103, 105, 110, 34, 58, 102, 97, 108, 115, 101, 44, 34, 109, 97, 120, 95, 109, 101, 115, 115, 97, 103, 101, 95, 101, 120, 112, 105, 114, 121, 95, 105, 110, 116, 101, 114, 118, 97, 108, 34, 58, 48, 44, 34, 99, 108, 105, 101, 110, 116, 95, 112, 107, 105, 100, 95, 112, 101, 114, 115, 105, 115, 116, 101, 110, 116, 34, 58, 102, 97, 108, 115, 101, 44, 34, 105, 115, 95, 115, 101, 108, 102, 95, 112, 114, 111, 116, 101, 99, 116, 105, 111, 110, 95, 115, 116, 97, 116, 117, 115, 34, 58, 102, 97, 108, 115, 101, 44, 34, 116, 99, 112, 95, 109, 97, 120, 95, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 95, 110, 117, 109, 34, 58, 48, 44, 34, 116, 99, 112, 115, 95, 109, 97, 120, 95, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 95, 110, 117, 109, 34, 58, 48, 44, 34, 119, 101, 98, 115, 111, 99, 107, 101, 116, 95, 109, 97, 120, 95, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 95, 110, 117, 109, 34, 58, 48, 44, 34, 119, 101, 98, 115, 111, 99, 107, 101, 116, 115, 95, 109, 97, 120, 95, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 95, 110, 117, 109, 34, 58, 48, 44, 34, 115, 101, 110, 100, 95, 109, 97, 120, 95, 116, 114, 121, 95, 109, 117, 116, 95, 116, 105, 109, 101, 115, 34, 58, 48, 44, 34, 115, 101, 110, 100, 95, 116, 114, 121, 95, 109, 117, 116, 95, 115, 108, 101, 101, 112, 95, 116, 105, 109, 101, 95, 109, 115, 34, 58, 48, 125], context: [5, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:200
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:200
>> save entry index:201, value:Entry { entry_type: EntryNormal, term: 9, index: 201, data: [4, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 4, 116, 101, 115, 116, 24, 15], context: [6, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:201
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:201
>> save entry index:202, value:Entry { entry_type: EntryNormal, term: 9, index: 202, data: [16, 0, 0, 0, 150, 1, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 32, 50, 48, 55, 53, 100, 52, 97, 97, 52, 53, 102, 51, 52, 57, 98, 56, 56, 52, 55, 48, 98, 100, 53, 54, 100, 55, 97, 99, 101, 102, 97, 97, 26, 225, 2, 123, 34, 99, 108, 105, 101, 110, 116, 95, 105, 100, 34, 58, 34, 57, 99, 52, 53, 49, 97, 97, 57, 54, 98, 97, 48, 52, 54, 102, 57, 98, 57, 55, 53, 99, 49, 98, 53, 57, 99, 53, 97, 57, 54, 101, 53, 34, 44, 34, 100, 117, 112, 34, 58, 102, 97, 108, 115, 101, 44, 34, 113, 111, 115, 34, 58, 34, 65, 116, 77, 111, 115, 116, 79, 110, 99, 101, 34, 44, 34, 112, 107, 105, 100, 34, 58, 48, 44, 34, 114, 101, 116, 97, 105, 110, 34, 58, 102, 97, 108, 115, 101, 44, 34, 116, 111, 112, 105, 99, 34, 58, 91, 93, 44, 34, 112, 97, 121, 108, 111, 97, 100, 34, 58, 91, 56, 50, 44, 49, 49, 49, 44, 57, 56, 44, 49, 49, 55, 44, 49, 49, 53, 44, 49, 49, 54, 44, 51, 50, 44, 54, 56, 44, 57, 55, 44, 49, 49, 54, 44, 57, 55, 93, 44, 34, 102, 111, 114, 109, 97, 116, 95, 105, 110, 100, 105, 99, 97, 116, 111, 114, 34, 58, 110, 117, 108, 108, 44, 34, 101, 120, 112, 105, 114, 121, 95, 105, 110, 116, 101, 114, 118, 97, 108, 34, 58, 110, 117, 108, 108, 44, 34, 114, 101, 115, 112, 111, 110, 115, 101, 95, 116, 111, 112, 105, 99, 34, 58, 110, 117, 108, 108, 44, 34, 99, 111, 114, 114, 101, 108, 97, 116, 105, 111, 110, 95, 100, 97, 116, 97, 34, 58, 110, 117, 108, 108, 44, 34, 117, 115, 101, 114, 95, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115, 34, 58, 91, 93, 44, 34, 115, 117, 98, 115, 99, 114, 105, 112, 116, 105, 111, 110, 95, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114, 115, 34, 58, 91, 93, 44, 34, 99, 111, 110, 116, 101, 110, 116, 95, 116, 121, 112, 101, 34, 58, 110, 117, 108, 108, 44, 34, 99, 114, 101, 97, 116, 101, 95, 116, 105, 109, 101, 34, 58, 49, 55, 50, 51, 49, 49, 54, 48, 57, 51, 125, 32, 144, 28], context: [7, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:202
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:202
>> save entry index:203, value:Entry { entry_type: EntryNormal, term: 9, index: 203, data: [13, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 4, 116, 101, 115, 116], context: [8, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:203
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:203
>> save entry index:204, value:Entry { entry_type: EntryNormal, term: 9, index: 204, data: [19, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 15, 99, 108, 105, 101, 110, 116, 95, 105, 100, 95, 49, 49, 49, 49, 49, 24, 3, 32, 3, 40, 189, 212, 210, 181, 6], context: [9, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:204
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:204
>> save entry index:205, value:Entry { entry_type: EntryNormal, term: 9, index: 205, data: [15, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 13, 116, 101, 115, 116, 95, 112, 97, 115, 115, 119, 111, 114, 100], context: [10, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:205
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:205
>> save entry index:206, value:Entry { entry_type: EntryNormal, term: 9, index: 206, data: [5, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 4, 116, 101, 115, 116, 24, 15], context: [11, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:206
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:206
>> save entry index:207, value:Entry { entry_type: EntryNormal, term: 9, index: 207, data: [3, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 10, 11, 114, 111, 98, 117, 115, 116, 95, 116, 101, 115, 116, 18, 7, 99, 108, 117, 115, 116, 101, 114, 18, 11, 114, 111, 98, 117, 115, 116, 95, 116, 101, 115, 116], context: [12, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:207
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:207
>> save entry index:208, value:Entry { entry_type: EntryNormal, term: 9, index: 208, data: [16, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 32, 50, 48, 55, 53, 100, 52, 97, 97, 52, 53, 102, 51, 52, 57, 98, 56, 56, 52, 55, 48, 98, 100, 53, 54, 100, 55, 97, 99, 101, 102, 97, 97], context: [13, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:208
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:208
>> save entry index:209, value:Entry { entry_type: EntryNormal, term: 9, index: 209, data: [18, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 10, 11, 109, 113, 116, 116, 45, 98, 114, 111, 107, 101, 114, 18, 15, 99, 108, 105, 101, 110, 116, 95, 105, 100, 95, 49, 49, 49, 49, 49], context: [14, 0, 0, 0, 0, 0, 0, 0], sync_log: false }
2024-08-08 19:21:33 INFO save light rd!!!,commit:209
2024-08-08 19:21:33 INFO ready entrys entry type:EntryNormal
>> commit entry index:209
